================================================
              TECHNICAL TESTING
================================================

Tools used:
Selenium for Functional Tests
K6 for Non-Functional Tests


Target üåê: https://www.xenonstack.com


TEST SCENARIOS AND TEST CASES(Functional=FTC_, Non-Functional=NFTC):

==================================================================================
TEST_ID:              TS_001
TEST_SCENARIO_TITLE:  A user wants to check the links in the navigation bar.
TEST_DESCRIPTION:     A User wants to check any of the links in the navigation
                      bar pointing towards a product of the company.
----------------------------------------------------------------------------------
    TEST_CASE_ID:            FTC_001
    TEST_CASE_TITLE:         Check Navigation Bar
    TEST_CASE_DESCRIPTION:   We need to verify if the links in the navigation
                             bar work or not.
    TEST_CASE_STEPS:
                             1. Visit xenonstack.com
                             2. Click on all the links in the navigation bar
    EXPECTED_RESULT:         The links in the navigation bar should redirect us
                             to the desired page.
    ACTUAL_RESULT:           Most of the navigation bar links do not work,
                             which is not what we were expecting.
    STATUS:                  Fail ‚ùå
    PRIORITY:                High
==================================================================================


==================================================================================
TEST_ID:              TS_002
TEST_SCENARIO_TITLE:  A user wants to fill the `Get Started` Form.
TEST_DESCRIPTION:     A User wanted to `Get Started` with the company so they
                      decided to fill in the form and put in a request.
----------------------------------------------------------------------------------
    TEST_CASE_ID:            FTC_002
    TEST_CASE_TITLE:         Check `Get Started` Form for Valid Input
    TEST_CASE_DESCRIPTION:   We need to verify if the form passes the valid
                             inputs.
    TEST_CASE_STEPS:
                             1. Visit xenonstack.com
                             2. Click on `Get Started`
                             3. Fill the Form with valid data
                             4. Click Submit
                             5. Click on various options on the next page of
                                the form
                             6. Click Submit
    EXPECTED_RESULT:         The form should be submitted properly with no
                             errors and an acknowledgement provided.
    ACTUAL_RESULT:           Successfully submitted the form.
    STATUS:                  Pass ‚úÖ
    PRIORITY:                High
----------------------------------------------------------------------------------
    TEST_CASE_ID:            FTC_003
    TEST_CASE_TITLE:         Check `Get Started` Form with no data
    TEST_CASE_DESCRIPTION:   We need to verify if the form works with empty data.
    TEST_CASE_STEPS:
                             1. Visit xenonstack.com
                             2. Click on `Get Started`
                             3. Click on Submit
    EXPECTED_RESULT:         The form should not allow proceeding with empty
                             data fields.
    ACTUAL_RESULT:           The form provides error messages for any field
                             that has not been filled properly.
    STATUS:                  Pass ‚úÖ
    PRIORITY:                High
----------------------------------------------------------------------------------
    TEST_CASE_ID:            FTC_004
    TEST_CASE_TITLE:         Check `Get Started` Form with invalid data
    TEST_CASE_DESCRIPTION:   We need to verify if the form accepts invalid
                             credentials.
    TEST_CASE_STEPS:
                             1. Visit xenonstack.com
                             2. Click on `Get Started`
                             3. Fill the form with invalid data
                             4. Click on Submit
    EXPECTED_RESULT:         The form should not allow invalid data and should
                             prompt the user to enter valid information.
    ACTUAL_RESULT:           The form provides error messages for any field
                             with invalid data.
    STATUS:                  Pass ‚úÖ
    PRIORITY:                High
==================================================================================


==================================================================================
TEST_ID:              TS_003
TEST_SCENARIO_TITLE:  A malicious user wants access to the website and performs
                      injection attacks.
TEST_DESCRIPTION:     A hacker attempts to gain privileged access by entering
                      malicious code into the form‚Äôs input fields.
----------------------------------------------------------------------------------
    TEST_CASE_ID:            FTC_005
    TEST_CASE_TITLE:         Check `Get Started` Form with SQL Injection
    TEST_CASE_DESCRIPTION:   We need to verify if the form is safe from SQL
                             injection attacks.
    TEST_CASE_STEPS:
                             1. Visit xenonstack.com
                             2. Click on `Get Started`
                             3. Fill the form with the data: ' OR '1'='1'; --
                             4. Click on Submit
    EXPECTED_RESULT:         The form should display error messages and prevent
                             the injection.
    ACTUAL_RESULT:           The form successfully displays error messages for
                             the injection attempt.
    STATUS:                  Pass ‚úÖ
    PRIORITY:                High
----------------------------------------------------------------------------------
    TEST_CASE_ID:            FTC_006
    TEST_CASE_TITLE:         Check `Get Started` Form with Cross Site Scripting
                             (XSS)
    TEST_CASE_DESCRIPTION:   We need to verify if the form is safe from XSS
                             attacks.
    TEST_CASE_STEPS:
                             1. Visit xenonstack.com
                             2. Click on `Get Started`
                             3. Fill the form with the data:
                                <script>alert('Vulnerable to XSS')</script>
                             4. Click on Submit
    EXPECTED_RESULT:         The form should display error messages and not
                             parse the JavaScript code.
    ACTUAL_RESULT:           The form successfully displays error messages for
                             the malicious code.
    STATUS:                  Pass ‚úÖ
    PRIORITY:                High
==================================================================================


==================================================================================
TEST_ID:              TS_004
TEST_SCENARIO_TITLE:  A user wants to visit some links in the footer of the
                      website.
TEST_DESCRIPTION:     Check if the links in the footer are all valid.
----------------------------------------------------------------------------------
    TEST_CASE_ID:            FTC_007
    TEST_CASE_TITLE:         Check the footer of the page.
    TEST_CASE_DESCRIPTION:   We need to verify if all footer links work properly.
    TEST_CASE_STEPS:
                             1. Visit xenonstack.com
                             2. Go to the end of the page
                             3. Click all the links in the footer
    EXPECTED_RESULT:         The links should open successfully without
                             discrepancies.
    ACTUAL_RESULT:           Some links are not available.
    STATUS:                  Fail ‚ùå
    PRIORITY:                High
==================================================================================


==================================================================================
TEST_ID:              TS_005
TEST_SCENARIO_TITLE:  A user wants to quickly visit the website's pages.
TEST_DESCRIPTION:     Check if all the website links provide good performance
                      for an optimal user experience.
----------------------------------------------------------------------------------
    TEST_CASE_ID:            FTC_008
    TEST_CASE_TITLE:         Check the load speed of each page
    TEST_CASE_DESCRIPTION:   We need to verify if all pages are responsive and
                             load under 4 seconds.
    TEST_CASE_STEPS:
                             1. Visit xenonstack.com
                             2. Click on all the links available on the website
    EXPECTED_RESULT:         All subpages should load within 4 seconds.
    ACTUAL_RESULT:           Some pages take more than 4 seconds to load.
    STATUS:                  Fail ‚ùå
    PRIORITY:                Medium
==================================================================================


==================================================================================
TEST_ID:              TS_006
TEST_SCENARIO_TITLE:  A user by mistake has visited an unrecognized or invalid
                      page.
TEST_DESCRIPTION:     Check if the website properly displays an error for
                      invalid pages.
----------------------------------------------------------------------------------
    TEST_CASE_ID:            FTC_009
    TEST_CASE_TITLE:         Check invalid pages
    TEST_CASE_DESCRIPTION:   We need to verify if a 404 error message is
                             displayed when visiting a non-existing page.
    TEST_CASE_STEPS:
                             1. Visit xenonstack.com/non-existing
    EXPECTED_RESULT:         Should display an error 404 message along with a
                             notice that the page does not exist.
    ACTUAL_RESULT:           Displays error 404 and a message stating that the
                             page does not exist.
    STATUS:                  Pass ‚úÖ
    PRIORITY:                Low
==================================================================================


==================================================================================
TEST_ID:              TS_007
TEST_SCENARIO_TITLE:  The company‚Äôs website is under heavy load every day.
TEST_DESCRIPTION:     A large group of users constantly visit the website to
                      read the company blogs and articles.
----------------------------------------------------------------------------------
    TEST_CASE_ID:            NFTC_010
    TEST_CASE_TITLE:         Check if the website can take a heavy load of users
                             properly.
    TEST_CASE_DESCRIPTION:   We need to perform a load test to verify if the
                             platform can handle heavy traffic.
    TEST_CASE_STEPS:         NIL
    EXPECTED_RESULT:         The website should have minimal or no downtime
                             with a response time under 10 seconds.
    ACTUAL_RESULT:           Only 78% of the tests maintain a response time of
                             10 seconds.
    STATUS:                  Fail ‚ùå
    PRIORITY:                High
==================================================================================


==================================================================================
TEST_ID:              TS_008
TEST_SCENARIO_TITLE:  Sudden Spike in userbase.
TEST_DESCRIPTION:     Due to online sharing, a sudden spike in traffic occurs.
                      Verify if the website can handle this surge.
----------------------------------------------------------------------------------
    TEST_CASE_ID:            NFTC_011
    TEST_CASE_TITLE:         Check if the website can take a sudden surge of
                             users.
    TEST_CASE_DESCRIPTION:   We need to check if the website can handle a
                             sudden spike in traffic.
    TEST_CASE_STEPS:         NIL
    EXPECTED_RESULT:         Should maintain stable connectivity with response
                             times under 10 seconds.
    ACTUAL_RESULT:           Only 96% of users get a successful connection and
                             only 29% get a response within 10 seconds.
    STATUS:                  Fail ‚ùå
    PRIORITY:                High
==================================================================================


==================================================================================
TEST_ID:              TS_009
TEST_SCENARIO_TITLE:  Increasing demand and traffic of the company‚Äôs user base.
TEST_DESCRIPTION:     With growing popularity, check if the website can handle
                      increasing traffic.
----------------------------------------------------------------------------------
    TEST_CASE_ID:            NFTC_012
    TEST_CASE_TITLE:         Check if the website can take an increasing amount
                             of network traffic over time.
    TEST_CASE_DESCRIPTION:   We need to verify if the website can sustain a
                             growing daily user base.
    TEST_CASE_STEPS:         NIL
    EXPECTED_RESULT:         The website should meet user base requirements
                             with minimal downtime and response times under 10
                             seconds.
    ACTUAL_RESULT:           Not a single connection can be maintained.
    STATUS:                  Fail ‚ùå
    PRIORITY:                High
==================================================================================


==================================================================================
TEST_ID:              TS_010
TEST_SCENARIO_TITLE:  Increasing demand for the company‚Äôs products leads to
                      higher `Get Started` form filling.
TEST_DESCRIPTION:     Check if the form API can handle high stress, manage data
                      properly, and prevent duplicate submissions.
----------------------------------------------------------------------------------
    TEST_CASE_ID:            NFTC_013
    TEST_CASE_TITLE:         Check if the form can handle large amounts of data
                             going in and out.
    TEST_CASE_DESCRIPTION:   Check the HubSpot API for the form that sends data
                             from the form to the server.
    TEST_CASE_STEPS:         NIL
    EXPECTED_RESULT:         The form should avoid duplicate data and process
                             each user's submission properly.
    ACTUAL_RESULT:           Only 47% of submissions were successful.
    STATUS:                  Fail ‚ùå
    PRIORITY:                High
==================================================================================
